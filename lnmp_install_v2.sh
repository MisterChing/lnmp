#!/bin/bash
# author : mister ching
if [ $# == 0 ]; then
    echo "Usage: {php|nginx|mysql}"
fi

workpath=`pwd`
nginx_path="/ching2/server/"
php_path="/ching2/server/"
mysql_path="/ching/server/"

function install_nginx(){
    #yum -y install pcre pcre-devel
    if [ ! -d ${nginx_path} ]; then
        mkdir -p ${nginx_path}
    fi
    test `find -maxdepth 1 -type f -name "nginx*"` && nginxtar=`basename $(find -maxdepth 1 -type f -name "nginx*")`
    if [ "${nginxtar}" == '' ]; then
        echo 'nginx tarball is not exists!'
        exit
    fi
    nginxname=`basename ${nginxtar} .tar.gz`
    tar -zxvf ${workpath}/${nginxtar} && cd ${nginxname}
    ./configure --prefix=${nginx_path}${nginxname} --with-http_ssl_module
    make && make install
    if [ $? == 0 ]; then
        cd ${nginx_path}
        ln -s ${nginxname} nginx
        init_nginx
        echo "nginx is install ok!"
    fi
}

function init_nginx(){
    cd ${nginx_path}nginx
    cat <<EOL > start.sh
#!/bin/bash
cd \`dirname \$0\`
./sbin/nginx -c ./conf/nginx.conf -p \`pwd\`
cd - > /dev/null
EOL
    cat <<EOL > stop.sh
#!/bin/bash
cd \`dirname \$0\`
./sbin/nginx -c ./conf/nginx.conf -p \`pwd\` -s stop
cd - >/dev/null
EOL
    cat <<EOL > reload.sh
#!/bin/bash
cd \`dirname \$0\`
./sbin/nginx -c ./conf/nginx.conf -p \`pwd\` -s reload
cd - > /dev/null
EOL
    chmod +x start.sh stop.sh reload.sh
}

function install_php(){
    #yum -y install bison flex libxml2-devel libxslt-devel openssl-devel bzip2-devel libcurl-devel libjpeg-devel libpng-devel freetype-devel t1lib-devel libicu-devel libmcrypt libmcrypt-devel mcrypt mhash
    if [ ! -d ${php_path} ]; then
        mkdir -p ${php_path}
    fi
    test `find -maxdepth 1 -type f -name "php*"` && phptar=`basename $(find -maxdepth 1 -type f -name "php*")`
    if [ "${phptar}" == '' ]; then
        echo 'php tarball is not exists'
        exit
    fi
    phpname=`basename ${phptar} .tar.gz`
    tar -zxvf ${workpath}/${phptar}
    cd ${workpath}/${phpname}
    ./configure \
    --prefix=${php_path}${phpname} \
    --with-config-file-path=${php_path}${phpname}/etc \
    --with-mysql \
    --with-mysql-sock \
    --with-mysqli \
    --with-pdo-mysql \
    --with-freetype-dir \
    --with-jpeg-dir \
    --with-png-dir \
    --with-zlib \
    --disable-rpath \
    --enable-bcmath \
    --enable-shmop \
    --enable-sysvsem \
    --enable-inline-optimization \
    --with-curl \
    --enable-mbregex \
    --enable-cgi \
    --enable-fpm \
    --enable-mbstring \
    --with-mcrypt \
    --with-gd \
    --enable-gd-native-ttf \
    --with-pear \
    --with-openssl \
    --with-mhash \
    --enable-pcntl \
    --enable-sockets \
    --with-xmlrpc \
    --enable-zip \
    --enable-soap
    make && make install
    if [ $? == 0 ]; then
        cd ${php_path}
        ln -s ${phpname} php
        init_php
        echo 'php is install ok!'
    fi
}

function init_php(){
    cd ${php_path}php
    cat <<EOL > reload.sh
#!/bin/bash
cd \`dirname \$0\`
kill -USR2 \`cat ./php-fpm.pid\`
cd - > /dev/null
EOL
    cat <<EOL > start.sh
#!/bin/bash
cd \`dirname \$0\`
./sbin/php-fpm -p \`pwd\` -c ./etc/php.ini  --fpm-config ./etc/php-fpm.conf 
cd - >/dev/null
EOL
    cat <<EOL > stop.sh
#!/bin/bash
cd \`dirname \$0\`
kill -QUIT \`cat ./php-fpm.pid\`
cd - > /dev/null
EOL
    chmod +x reload.sh start.sh stop.sh
}

function install_mysql(){
    #yum -y install cmake ncurses-devel
    mkdir -p /data/mysql
    if [ ! -d ${mysql_path} ]; then
        mkdir -p ${mysql_path}
    fi
    test `find -maxdepth 1 -type f -name "mysql*"` && mysqltar=`basename $(find -maxdepth 1 -type f -name "mysql*")`
    if [ "${mysqltar}" == '' ]; then
        echo 'mysql tarball is not exists'
        exit
    fi
    mysqlname=`basename ${mysqltar} .tar.gz`
    tar -zxvf ${workpath}/${mysqltar}
    cd ${workpath}/${mysqlname}

    cmake \
    -DCMAKE_INSTALL_PREFIX=${mysql_path}${mysqlname} \
    -DMYSQL_DATADIR=/data/mysql/ \
    -DWITH_MYISAM_STORAGE_ENGINE=1 \
    -DWITH_INNOBASE_STORAGE_ENGINE=1 \
    -DWITH_MEMORY_STORAGE_ENGINE=1 \
    -DWITH_READLINE=1 \
    -DMYSQL_UNIX_ADDR=/var/lib/mysql/mysql.sock \
    -DMYSQL_TCP_PORT=3306 \
    -DENABLED_LOCAL_INFILE=1 \
    -DWITH_PARTITION_STORAGE_ENGINE=1 \
    -DEXTRA_CHARSETS=all \
    -DDEFAULT_CHARSET=utf8mb4 \
    -DDEFAULT_COLLATION=utf8mb4_general_ci
    #-DWITH_BOOST=boost

    make && make install
    if [ $? == 0 ]; then
        cd ${mysql_path}
        ln -s ${mysqlname} mysql
        init_mysql
        echo 'mysql is install ok!'
    fi
}

function init_mysql(){
    cd ${mysql_path}/mysql
    mkdir -p conf var log
    cp support-files/my-default.cnf conf/mysql-default.conf
    cat <<EOL > conf/mysql.conf
# For advice on how to change settings please see
# http://dev.mysql.com/doc/refman/5.6/en/server-configuration-defaults.html
# *** DO NOT EDIT THIS FILE. It's a template which will be copied to the
# *** default location during install, and will be replaced if you
# *** upgrade to a newer version of MySQL.

[mysqld]

# Remove leading # and set to the amount of RAM for the most important data
# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.
# innodb_buffer_pool_size = 128M

# Remove leading # to turn on a very important data integrity option: logging
# changes to the binary log between backups.
# log_bin

# These are commonly set, remove the # and set as required.
# basedir = .....
# datadir = .....
# port = .....
# server_id = .....
# socket = .....

basedir=mysql_install_path
datadir=/data/mysql
port=3306
socket=mysql_install_path/var/mysql.sock
slow-query-log-file=mysql_install_path/log/slow.log
pid-file=mysql_install_path/var/pid
general-log=1
general-log_file=mysql_install_path/log/mysql.log
max_allowed_packet=33554432
ft_min_word_len=3
#ft_bollean_syntax=' |-><()~*:""&^'
innodb_buffer_pool_size=80M
wait_timeout=86400
max_connections=2048
transaction_isolation=READ-COMMITTED
explicit_defaults_for_timestamp=true

# Remove leading # to set options mainly useful for reporting servers.
# The server defaults are faster for transactions and fast SELECTs.
# Adjust sizes as needed, experiment to find the optimal values.
# join_buffer_size = 128M
# sort_buffer_size = 2M
# read_rnd_buffer_size = 2M 

sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES 
[mysql]
socket=mysql_install_path/var/mysql.sock

[mysqldump]
socket=mysql_install_path/var/mysql.sock

[mysqladmin]
socket=mysql_install_path/var/mysql.sock

EOL
    cat <<EOL > start.sh
#!/bin/bash
cd \`dirname \$0\`
nohup \`pwd\`/bin/mysqld_safe --defaults-file=./conf/mysql.conf &
cd - > /dev/null
EOL
    cat <<EOL > stop.sh
#!/bin/bash
cd \`dirname \$0\`
kill -QUIT \`cat var/pid\`
cd - > /dev/null
EOL
    chmod +x start.sh stop.sh
    cd scripts && ./mysql_install_db --user=ching --basedir=${mysql_path}/mysql --datadir=/data/mysql
}

case $1 in
    nginx)
        install_nginx
        ;;
    php)
        install_php
        ;;
    mysql)
        install_mysql
        ;;
    *)
esac
